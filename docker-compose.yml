version: "3"

services:
  # PHP Service
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    user: "1000"
    image: task-management-app
    container_name: task-management-app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      DB_HOST: mysqldb
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}

    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    ports:
      - 9000:9000
    env_file:
      - .env
    networks:
      - laravel-network
    depends_on:
      - mysqldb

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: task-management-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel-network
    depends_on:
      - app

  # MySQL Service
  mysqldb:
    image: mysql:8.0
    container_name: task-management-mysqldb
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

    networks:
      - laravel-network

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: task-management-phpmyadmin
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
    environment:
      PMA_HOST: mysqldb
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      - laravel-network
    depends_on:
      - mysqldb

# Docker Networks
networks:
  laravel-network:
    driver: bridge

# # Volumes
# volumes:
#   dbdata:
#     driver: local